<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vinicius.dacal</title>
    <description>Tutoriais, artigos e materiais para estudos de desenvolvimento web.</description>
    <link>http://www.viniciusdacal.com/</link>
    <atom:link href="http://www.viniciusdacal.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 02 Oct 2016 19:58:45 -0300</pubDate>
    <lastBuildDate>Sun, 02 Oct 2016 19:58:45 -0300</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>O sentimento de propriedade do código</title>
        <description>
&lt;p&gt;Todo programador, uma hora ou outra, ou quase sempre passa por isso. Você
escreve código e as vezes sente que aquilo faz parte de você, e por isso, a
partir desse sentimento, você quer escrever o melhor código do mundo, pelo menos
o que você considera ser o melhor código do mundo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://d262ilb51hltx0.cloudfront.net/max/800/1*PH89drcTxwIVDHjx1B56gA.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Isso é uma coisa muito boa, partindo do principio que você quer cuidar do
projeto cada vez mais, estabelecer padrões e pensar formas cada vez melhores de
escrever o código e escalar o sistema. Porém, é comum se sobressair o outro lado
desse mesmo sentimento, que iremos observar alguns aspectos abaixo.&lt;/p&gt;

&lt;p&gt;Imagine que você trabalhe em equipe e que não só você, mas que mais pessoas
estarão fazendo alterações em um projeto. Por mais que você estabeleça padrões
de escrita de código, padrões de estrutura para testes e escreva cem páginas de
docs com boas práticas, os outros programadores nunca irão escrever exatamente
da mesma maneira que você, ou utilizar a mesma abordagem que você usaria. Nessa
hora, esse sentimento de propriedade do código pode começar a te incomodar.&lt;/p&gt;

&lt;p&gt;O fato disso te incomodar não chega a ser um problema, mas é preciso pensar nas
atitudes que você toma frente à uma diferente forma de pensar.&lt;/p&gt;

&lt;p&gt;É importante você conseguir analisar o que é bom ou não para o projeto e não o
que é diferente ou igual ao que você pensa, &lt;strong&gt;ou que fere o seu ego&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Acho válido nós nos questionarmos, para que não nos tornemos pessoas
autoritárias, mas sim pessoas colaborativas:&lt;/p&gt;

&lt;h3 id=&quot;quando-algum-trs-uma-soluo-diferente-da-sua-voc-considera-a&quot;&gt;Quando alguém trás uma solução diferente da sua, você considera a&lt;/h3&gt;
&lt;p&gt;possibilidade de essa solução ser melhor, ou você discorda, achando que a sua já
é boa o suficiente?&lt;/p&gt;

&lt;p&gt;Se você costuma discordar logo de cara, você já está fazendo isso errado.
Considere a possibilidade de você estar errado ou de a outra ideia ser melhor.
Pessoas pensam de maneiras diferentes e soluções mais simples podem vir das
pessoas mais inesperadas, saiba dar espaço para os outros falarem e saiba
&lt;strong&gt;ouvir o que os outros dizem&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;voc-costuma-pedir-que-as-pessoas-faam-as-coisas-sem-explicar-o-porqu&quot;&gt;Você costuma pedir que as pessoas façam as coisas sem explicar o porquê?&lt;/h3&gt;

&lt;p&gt;Se você delega uma tarefa que não tem um motivo explícito e não explica o porque
de a tarefa ser feita, você está desincentivando a pessoa a pensar. Eu mesmo,
simplesmente não consigo fazer uma tarefa se eu não entender o escopo e a razão
da mesma. Eu preciso entender o que eu estou fazendo, para que eu elabore a
minha maneira de fazer aquilo, a maneira que eu acho melhor e que posteriormente
será revisada por outros. Como desenvolvedor de software, eu sou pago também
para &lt;strong&gt;PENSAR&lt;/strong&gt; e não somente para escrever código!&lt;/p&gt;

&lt;h3 id=&quot;quando-voc-vai-dar-uma-opinio-contrria-a-algo-voc-costuma-ser-vago&quot;&gt;Quando você vai dar uma opinião contrária a algo, você costuma ser vago?&lt;/h3&gt;

&lt;p&gt;Quando alguém trouxer uma solução e você discordar da mesma, você deve ser claro
e objetivo do porque discorda. Se você costuma discordar sem argumentos, apenas
utilizando frases vagas como: “Eu não acho legal assim”, pode dar a impressão
que você não quer que faça de tal maneira apenas porque não é do seu jeito.&lt;/p&gt;

&lt;h3 id=&quot;voc-costuma-ser-fechado-a-novas-opinies-e-idias&quot;&gt;Você costuma ser fechado a novas opiniões e idéias?&lt;/h3&gt;

&lt;p&gt;Esteja sempre aberto a novas ideias, principalmente de pessoas novas no time.
Essas pessoas vem com uma outra visão, não tem os “vícios de grupo” como os
outros que já estão no projeto.&lt;/p&gt;

&lt;p&gt;Isso não quer dizer que você irá fazer tudo da maneira que os outros disserem,
mas a mescla das ideias pode chegar à uma solução nunca antes pensada.&lt;/p&gt;

&lt;p&gt;Falando sobre &lt;strong&gt;vícios de grupo&lt;/strong&gt;, o vídeo abaixo mostra um experimento sobre
&lt;strong&gt;Análise comportamental em grupo.&lt;/strong&gt; É essencial assistir!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Devemos nos fazer essas perguntas com frequência e não podemos nos permitir
achar que, possuindo uma experiência menor, uma pessoa não tenha nada a
ensinar.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;E só pra não esquecer: &lt;strong&gt;Código não é escrito em pedra, código é um organismo
vivo que constantemente muda.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Gostou do post e achou útil? Ajude na divulgação para que mais pessoas tenham acesso :)&lt;/p&gt;

&lt;p&gt;Tem alguma dica sobre trabalho em time? deixe nos comentários abaixo :)&lt;/p&gt;

</description>
        <pubDate>Thu, 15 Sep 2016 17:00:00 -0300</pubDate>
        <link>http://www.viniciusdacal.com/pt/profissao/2016/09/15/o-sentimento-de-propriedade-do-codigo.html</link>
        <guid isPermaLink="true">http://www.viniciusdacal.com/pt/profissao/2016/09/15/o-sentimento-de-propriedade-do-codigo.html</guid>
        
        
        <category>pt</category>
        
        <category>profissao</category>
        
      </item>
    
      <item>
        <title>The Code ownership feeling</title>
        <description>&lt;p&gt;Every developer, sometime in their lives, or very often pass through this
feeling. You write code and it feels like it’s a part of you, thus motivating
you to write the best code in the world, or at least what you consider it to be&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://d262ilb51hltx0.cloudfront.net/max/800/1*PH89drcTxwIVDHjx1B56gA.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That’s a good thing if we take into account that you increasingly want to take
care of the project, establish patterns and think about more ways of improving
your code and scaling the system. However, this feeling of ownership can usually
have some negative aspects as well.&lt;/p&gt;

&lt;p&gt;Imagine that you work in a team and not only you, but more people will be
modifying the project. Even if you set code writing patterns, structure patterns
for testing and write a hundred pages of documentation with good practices, the
other developers will not write exactly the same way as you do, or use the same
approach you would. These are the moments when that code ownership feeling will
start to bother you.&lt;/p&gt;

&lt;p&gt;The fact that it bothers you, is not a problem, but it’s important to evaluate
your attitudes toward different ways of thinking.&lt;/p&gt;

&lt;p&gt;It’s important that you analyze what is good or not for the project, and not
what is different from your opinion, or what hurts &lt;strong&gt;your ego&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I think it’s valid we ask ourselves some questions, to not become authoritarian,
but &lt;strong&gt;collaborative people:&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;when-someone-brings-up-a-solution-different-than-yours-do-you-consider-the&quot;&gt;When someone brings up a solution different than yours, do you consider the&lt;/h3&gt;
&lt;p&gt;possibility that this solution can be better, or do you disagree, thinking that
your solution is already good enough?&lt;/p&gt;

&lt;p&gt;If you are used to disagreeing right away, you are doing this wrong. You have to
consider the possibility that you are are wrong or that the other idea can be
better. There are many different ways to think about a problem and simpler
solutions can come from the people you least expect. You have to make room for
others to talk and &lt;strong&gt;listen to what others have to say&lt;/strong&gt; if you want to be a
better team player.&lt;/p&gt;

&lt;h3 id=&quot;do-you-usually-ask-people-to-do-tasks-without-explaining-the-reasons&quot;&gt;Do you usually ask people to do tasks without explaining the reasons?&lt;/h3&gt;

&lt;p&gt;If you delegate a task that has no explicit reason and you don’t explain why
that task should be done, you are discouraging the person to think. Talking for
myself, I just can’t do a task without knowing the scope and the reason for it.
I need to understand what is the expected outcome, so I can figure out the best
way of accomplishing the task, which will later be reviewed by others in my
team. As a developer, I get paid to **THINK **and not only to write code!&lt;/p&gt;

&lt;h3 id=&quot;when-you-give-a-opposite-opinion-are-you-usually-vague&quot;&gt;When you give a opposite opinion, are you usually vague?&lt;/h3&gt;

&lt;p&gt;When someone suggests a solution and you disagree with it, you should be clear
and objective on why you disagree. If you usually disagree without arguments,
just using vague phrases like it: “I just don’t like this way, it’s not cool”,
it may seem that you don’t agree just because it’s not your way of doing that.&lt;/p&gt;

&lt;h3 id=&quot;are-you-usually-not-open-to-different-opinions-and-new-ideas&quot;&gt;Are you usually not open to different opinions and new ideas?&lt;/h3&gt;

&lt;p&gt;Always be open to new ideas, especially from new people in the team. Those
people come with another vision, they don’t have the “Group addictions” as the
others, who have been in the project for a longer time.&lt;/p&gt;

&lt;p&gt;That doesn’t mean that you should always do everything they suggest, but the
&lt;strong&gt;merge of ideas&lt;/strong&gt; can create a solution that was never thought before.&lt;/p&gt;

&lt;p&gt;Talking about &lt;strong&gt;Group addictions&lt;/strong&gt;, the video below shows an experiment about
**Behavioral analysis. **It’s essential to watch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We should ask those questions frequently to not allow us to think that, a
person with lower experience has nothing to teach.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And always remember: &lt;strong&gt;Code is not written in stone, code is something alive
that changes frequently.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For anyone who would like to read more about this topic, I highly recommend this
article from &lt;a href=&quot;https://medium.com/u/a9cf8b3432bf&quot;&gt;Tiago Garcia&lt;/a&gt;, explaining the
concept of collective code ownership: &lt;a href=&quot;https://www.infoq.com/articles/revisit-p-collective&quot;&gt;Be a thoughtful programmer by exercising
more collective ownership&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Did you enjoy the post and think it’s useful? Share this article, to help
us spread the word :)&lt;/p&gt;
</description>
        <pubDate>Thu, 15 Sep 2016 17:00:00 -0300</pubDate>
        <link>http://www.viniciusdacal.com/en/profession/2016/09/15/the-code-ownership-feeling.html</link>
        <guid isPermaLink="true">http://www.viniciusdacal.com/en/profession/2016/09/15/the-code-ownership-feeling.html</guid>
        
        
        <category>en</category>
        
        <category>profession</category>
        
      </item>
    
      <item>
        <title>Requisições assíncronas em Redux</title>
        <description>&lt;p&gt;Quando se está começando a aprender &lt;strong&gt;Redux&lt;/strong&gt;, uma das dúvidas mais comuns é
como fazer requisições assíncronas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://d262ilb51hltx0.cloudfront.net/max/800/1*ecCWySugfp5sfmR3WW_1yw.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Observando os exemplos básicos, que implementam apenas actions comuns, não fica
tão óbvio qual abordagem utilizar ao fazer uma integração com uma API.&lt;/p&gt;

&lt;p&gt;Neste post, mostrarei como implementar um &lt;strong&gt;middleware,&lt;/strong&gt; que ficará responsável
por interpretar um padrão de específico de &lt;strong&gt;action&lt;/strong&gt;(async action) e gerenciar
nossas requisições, disparando uma &lt;strong&gt;action&lt;/strong&gt; correspondente para cada momento
das mesmas.&lt;/p&gt;

&lt;h3 id=&quot;actions&quot;&gt;Actions&lt;/h3&gt;

&lt;p&gt;Quando estamos fazendo uma requisição assíncrona há dois momentos importantes
que comumente alteram o estado a aplicação: O momento em que uma requisição se
inicia, e o momento que você recebe um resultado.&lt;/p&gt;

&lt;p&gt;Esses dois momentos podem ser divididos em três &lt;strong&gt;actions&lt;/strong&gt; distintas: Uma
action para o inicio da requisição, outra para o caso de sucesso e uma terceira
para o caso de falha. Poderíamos chamá-las de &lt;strong&gt;CALL_API_REQUEST&lt;/strong&gt;,
&lt;strong&gt;CALL_API_SUCCESS&lt;/strong&gt; e &lt;strong&gt;CALL_API_FAILURE.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;De uma maneira simples, mas não muito elegante, poderíamos aplicar esse conceito
sem utilizar um middleware, como no exemplo abaixo:&lt;/p&gt;

&lt;p&gt;O código acima teria que ser utilizado em um local onde tivéssemos acesso ao
método &lt;strong&gt;dispatch&lt;/strong&gt;, que normalmente, é dentro de um &lt;strong&gt;container component&lt;/strong&gt;.
Poderíamos tentar melhorar esse código abstraindo as actions para um &lt;strong&gt;action
creator&lt;/strong&gt;, mas é notável que esse modelo não escala. Para cada endpoint da nossa
API, precisaríamos ter três &lt;strong&gt;action creators&lt;/strong&gt; diferentes, o que é
impraticável.&lt;/p&gt;

&lt;p&gt;Poderíamos tentar levar toda essa lógica para dentro do &lt;strong&gt;action creator&lt;/strong&gt;, mas
não teríamos acesso ao método &lt;strong&gt;dispatch&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Uma forma muito mais simples, seria termos uma &lt;strong&gt;action&lt;/strong&gt; que descrevesse como
será o request, um padrão de action diferente que chamaremos de &lt;strong&gt;async
action:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;No exemplo acima, as principais diferenças que podemos notar entre uma action
comum e nossa &lt;strong&gt;async action&lt;/strong&gt;, é o fato de termos &lt;strong&gt;types&lt;/strong&gt; ao invés de
&lt;strong&gt;type&lt;/strong&gt;, e de retornarmos uma função &lt;strong&gt;callApi&lt;/strong&gt; junto com o objeto.&lt;/p&gt;

&lt;p&gt;Os &lt;strong&gt;types&lt;/strong&gt; serão utilizados nos três momentos distintos da requisição e é
importante que eles sejam fornecidos na seguinte ordem:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;indicando&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inicio&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;indicando&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sucesso&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;indicando&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;falha&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A &lt;strong&gt;callApi&lt;/strong&gt; será utilizada futuramente para fazer o request.&lt;/p&gt;

&lt;p&gt;Para interpretar essa action e gerenciar as requisições, nós utilizaremos um
&lt;strong&gt;Middleware.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;middlewares&quot;&gt;Middlewares&lt;/h3&gt;

&lt;p&gt;Em suma, &lt;a href=&quot;http://redux.js.org/docs/advanced/Middleware.html&quot;&gt;middlewares&lt;/a&gt; são
funções que ficam entre o disparo de uma &lt;strong&gt;action&lt;/strong&gt; e a chegada dela no **Root
Reducer, **sendo capazes de alterar o seu conteúdo ou até mesmo cancelá-la.&lt;/p&gt;

&lt;p&gt;Abaixo segue um exemplo básico de um middleware de logs:&lt;/p&gt;

&lt;p&gt;No exemplo acima, nós não modificamos o conteúdo da &lt;strong&gt;action&lt;/strong&gt;, apenas fazemos
log dela e do &lt;strong&gt;state&lt;/strong&gt; da aplicação após o seu disparo&lt;strong&gt;. **É importante
observar que nós chamamos o método **next **passando para ele a **action&lt;/strong&gt;
atual, a fim de deixar a &lt;strong&gt;action&lt;/strong&gt; seguir seu fluxo, até o próximo
&lt;strong&gt;middleware&lt;/strong&gt; ou até o &lt;strong&gt;Root Reducer&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;O middleware que implementaremos irá interceptar as &lt;strong&gt;async actions,&lt;/strong&gt; e as
substituirá por três &lt;strong&gt;actions&lt;/strong&gt; diferentes, correspondendo os três momentos do
request.&lt;/p&gt;

&lt;p&gt;Dadas estas informações, vamos para a implementação do nosso middleware:&lt;/p&gt;

&lt;p&gt;Logo no início da função, na linha 13, nós verificamos se a action recebida se
trata de uma &lt;strong&gt;async action&lt;/strong&gt;, verificando se existe a propriedade &lt;strong&gt;types&lt;/strong&gt;
dentro dela. Caso se trate de uma action comum, nós apenas passamos ela a
diante, sem efetuar nenhuma alteração.&lt;/p&gt;

&lt;p&gt;Caso se trate de uma &lt;strong&gt;async action&lt;/strong&gt;, nós extraímos os &lt;strong&gt;types&lt;/strong&gt; para
respectivas variáveis e disparamos uma &lt;strong&gt;action&lt;/strong&gt;, contendo o primeiro &lt;strong&gt;type&lt;/strong&gt;,
indicando que o request irá iniciar.&lt;/p&gt;

&lt;p&gt;Em seguida, nós chamamos a função &lt;strong&gt;callApi&lt;/strong&gt;, que veio junto com a &lt;strong&gt;async
action&lt;/strong&gt;, e passamos para a promise as funções handlers, que lidarão com os
responses em caso de sucesso e em caso de falha.&lt;/p&gt;

&lt;p&gt;Dentro dos handlers, nós disparamos uma &lt;strong&gt;action&lt;/strong&gt; indicando que foi finalizado
o request, colocando no atributo &lt;strong&gt;body&lt;/strong&gt; o resultado do request.&lt;/p&gt;

&lt;p&gt;Em caso de sucesso, nós incluímos um atributo &lt;strong&gt;lastFetched&lt;/strong&gt;, com o timestamp
do momento em que o request foi finalizado.&lt;/p&gt;

&lt;p&gt;Junto a cada action, foi incluído o &lt;strong&gt;payload&lt;/strong&gt; da &lt;strong&gt;async action&lt;/strong&gt;, para que os
reducers tenham acesso ao mesmo.&lt;/p&gt;

&lt;h3 id=&quot;incluindo-o-middleware-na-store&quot;&gt;Incluindo o Middleware na store&lt;/h3&gt;

&lt;p&gt;Com o middleware implementado, nós precisamos incluí-lo na nossa store. Para
isso, nós utilizaremos o método &lt;strong&gt;applyMiddleware&lt;/strong&gt; do redux, conforme o exemplo
abaixo:&lt;/p&gt;

&lt;p&gt;Feito isso, todas as actions passarão pelo nosso &lt;strong&gt;callAPIMiddleware&lt;/strong&gt;, as que
forem &lt;strong&gt;async actions&lt;/strong&gt; serão interceptadas e convertidas em actions comuns.&lt;/p&gt;

&lt;p&gt;Dessa forma, conseguimos deixar por conta do middleware o disparo das
requisições e podemos manter apenas um &lt;strong&gt;action creator&lt;/strong&gt; para cada endpoint.&lt;/p&gt;

&lt;p&gt;Com o &lt;strong&gt;middleware&lt;/strong&gt;, agora é possível termos actions assim:&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;figcaption_hack&quot;&gt;&lt;strong&gt;Async action&lt;/strong&gt; que irá disparar uma requisição para o endpoint “user/contacts”
passando como parâmetro um &lt;strong&gt;userId&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Async action que irá disparar uma requisição para o endpoint “user/contacts”
passando como parâmetro um userId&lt;/p&gt;

&lt;p&gt;Os &lt;strong&gt;middlewares&lt;/strong&gt; não se limitam a controlar requisições, eles são uma das
features mais poderosas do redux e pretendo abordá-los em futuros posts. Para
quem tem interesse em se aprofundar, sugiro que comece pela
&lt;a href=&quot;http://redux.js.org/docs/advanced/Middleware.html&quot;&gt;documentação&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Se você está começando com Redux agora e chegou direto neste post, indico ler
meu post anterior: &lt;a href=&quot;https://medium.com/coderockr-way/conhecendo-o-bÃ¡sico-do-redux-7315bcf09cef#.fdvpjz4g3&quot;&gt;Conhecendo o básico do
Redux&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Estou começando uma série de posts sobre &lt;strong&gt;Redux&lt;/strong&gt; e &lt;strong&gt;React&lt;/strong&gt;, gostaria de
receber um feedback de vocês sobre as dúvidas mais comuns de quem está
começando. Pode ser enviando para o email:
&lt;a href=&quot;mailto:viniciusldacal@gmail.com&quot;&gt;viniciusldacal@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Gostou do post e achou útil? Ajude na divulgação para que mais pessoas tenham acesso :)&lt;/p&gt;

&lt;p&gt;Tem alguma dica ou dúvida sobre o tema? deixe nos comentários abaixo :)&lt;/p&gt;

</description>
        <pubDate>Sat, 02 Jul 2016 17:00:00 -0300</pubDate>
        <link>http://www.viniciusdacal.com/pt/redux/react/2016/07/02/requisicoes-assincronas-em-redux.html</link>
        <guid isPermaLink="true">http://www.viniciusdacal.com/pt/redux/react/2016/07/02/requisicoes-assincronas-em-redux.html</guid>
        
        
        <category>pt</category>
        
        <category>redux</category>
        
        <category>react</category>
        
      </item>
    
      <item>
        <title>Conhecendo o básico do Redux</title>
        <description>&lt;p&gt;Redux é um container de estados previsível para aplicações javascript, mas o que
isso significa?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://d262ilb51hltx0.cloudfront.net/max/600/1*deNSjC7XD-DA3w4wNK7XEQ.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Concebido por &lt;a href=&quot;https://medium.com/u/a3a8af6addc1&quot;&gt;Dan Abramov&lt;/a&gt;, redux é um
padrão de arquitetura de aplicação, inspirado no
&lt;a href=&quot;http://facebook.github.io/flux/&quot;&gt;Flux&lt;/a&gt; do Facebook e simplificado com ajuda de
algumas práticas do &lt;a href=&quot;https://github.com/evancz/elm-architecture-tutorial/&quot;&gt;Elm&lt;/a&gt;.
Redux lhe da o poder de construir aplicações consistentes e controlar a forma
como os dados fluem e são transformados, seguindo três princípios:&lt;/p&gt;

&lt;h4 id=&quot;single-source-of-truth&quot;&gt;1. Single source of truth&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Single_source_of_truth&quot;&gt;(SSOT)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Todo o estado da sua aplicação é armazenado em uma única árvore de objetos,
dentro de uma única store. Qualquer acesso ao state, é feito através de
referência ao dado armazenado na store. Essa prática evita que você tenha dados
duplicados, e uma vez que um dado é atualizado, a alteração se propaga para toda
a aplicação.&lt;/p&gt;

&lt;h4 id=&quot;state-is-read-only&quot;&gt;2. State is Read-only&lt;/h4&gt;

&lt;p&gt;A única forma de alterar o estado da sua aplicação é emitindo uma &lt;strong&gt;action&lt;/strong&gt;, um
objeto descrevendo o que aconteceu.&lt;/p&gt;

&lt;p&gt;Para acessar o state, você pode utilizar o método **getState **da store, o mesmo
retorna todo o estado da aplicação, mas somente para a leitura.&lt;/p&gt;

&lt;p&gt;Para escutarmos as alterações do state, utilizamos o método &lt;strong&gt;subscribe&lt;/strong&gt; da
store, passando como parâmetro um listener, da seguinte forma:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;unsubscribe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//execute every time the state change&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;unsubscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//canceling listener&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;Como podemos ver no exemplo acima, quando quisermos cancelar o listener, basta
chamar o retorno do método &lt;strong&gt;subscribe&lt;/strong&gt; como uma função.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Quando precisamos fazer uma alteração no &lt;strong&gt;state&lt;/strong&gt;, a mesma precisa ser
“solicitada” através de uma &lt;strong&gt;action&lt;/strong&gt;, um objeto contendo obrigatoriamente um
&lt;strong&gt;type **e opcionalmente um **payload&lt;/strong&gt;(conteúdo).** &lt;strong&gt;O **type&lt;/strong&gt; é um
identificador para a &lt;strong&gt;action&lt;/strong&gt; e o &lt;strong&gt;payload&lt;/strong&gt; é o conteúdo a ser enviado junto
a ela, conforme o exemplo abaixo:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ADD_CONTACT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Jon Snow'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'youknownothing@jonsnow.com'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;como é possível observar acima, essa é uma &lt;strong&gt;action&lt;/strong&gt; to tipo ADD_CONTACT, e
leva com ela os dados necessários para incluir esse contato ao nosso &lt;strong&gt;state&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;É comum utilizarmos &lt;strong&gt;action creators&lt;/strong&gt; para criarmos nossas actions, que são
simplesmente funções que esperam parâmetros específicos e devolvem um objeto
formatado, conforme o exemplo abaixo:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addContact&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ADD_CONTACT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;para disparar uma &lt;strong&gt;action&lt;/strong&gt;, utilizamos o método &lt;strong&gt;dispatch&lt;/strong&gt; da store:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addContact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Jon Snow'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'youknownothing@jonsnow.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;changes-are-made-with-pure-functions&quot;&gt;3. Changes are made with Pure functions&lt;/h4&gt;

&lt;p&gt;Para descrever como o &lt;strong&gt;state **da aplicação será alterado pelas **actions&lt;/strong&gt;,
nós escrevemos pure
&lt;a href=&quot;http://redux.js.org/docs/Glossary.html#reducer&quot;&gt;reducers&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reducers **são funções que são chamadas toda vez que uma action é disparada e
recebem como parâmetros o **state&lt;/strong&gt; atual e a &lt;strong&gt;action&lt;/strong&gt;, e devolvem um novo
&lt;strong&gt;state.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;É importante ressaltar que um &lt;strong&gt;reducer&lt;/strong&gt; deve ser, obrigatoriamente, uma função
pura. Dado os mesmos parâmetros, um reducer deve sempre devolver o mesmo
resultado e não pode se basear em nada que esteja além do seu próprio escopo
para chegar nesse resultado. Para quem quiser se aprofundar um pouco mais em
conceitos funcionais, eu indicaria dar uma conferida no post do &lt;a href=&quot;https://medium.com/u/fb33cb80b669&quot;&gt;Matheus
Lima&lt;/a&gt; sobre &lt;a href=&quot;https://medium.com/@matheusml/entendendo-programaÃ§Ã£o-funcional-em-javascript-de-uma-vez-c676489be08b#.9l123fghs&quot;&gt;programação funcional em
Javascript&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Considerando que nossos reducers devem ser funções puras, vamos implementar
nossa lógica de adicionar um novo contato ao nosso &lt;strong&gt;state&lt;/strong&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reducer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ADD_CONTACT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;contactCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;contactCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;como é possível ver no exemplo acima, nosso reducer verifica se a action é tipo
ADD_CONTACT, e se ela realmente for, ele retorna um novo state, incluindo o novo
contato.&lt;/p&gt;

&lt;p&gt;É importante que, para poder aproveitar ao máximo do redux, você trabalhe com
&lt;a href=&quot;https://en.wikipedia.org/wiki/Immutable_object&quot;&gt;imutabilidade&lt;/a&gt;. No exemplo
acima, nós não fazemos um &lt;strong&gt;push&lt;/strong&gt; do novo contato dentro da
&lt;strong&gt;contactCollection&lt;/strong&gt;, e sim retornamos uma nova contactCollection. Esta possui
os mesmos contatos da anterior, mas contém o novo contato. Desta forma
preservamos o state anterior e nos mantemos dentro da premissa de &lt;strong&gt;read-only
state&lt;/strong&gt;. Como **Imutabilidade **é um dos princípios base dos redux, aconselho
assistir a palestra do &lt;a href=&quot;https://medium.com/u/226857fe8d86&quot;&gt;William Huang&lt;/a&gt; no
RSJS2016 &lt;a href=&quot;https://www.youtube.com/watch?v=8-R9C3yerPo&amp;amp;list=PLg2lQYZDBwORWkiAe6L9Ah-L2JxJ6froI&amp;amp;index=8&quot;&gt;Quando os dados imutáveis mudam
tudo&lt;/a&gt;,
que explica de uma forma prática imutabilidade em Javascript.&lt;/p&gt;

&lt;p&gt;Seguindo esses três princípios da forma correta, você conseguirá escrever
aplicações previsíveis de uma forma simples.&lt;/p&gt;

&lt;p&gt;Nesse post arranhamos apenas a superfície do redux, nos próximos posts vou
aprofundar mais em cada conceito.&lt;/p&gt;

&lt;p&gt;O &lt;a href=&quot;http://redux.js.org/&quot;&gt;ReduxJS&lt;/a&gt; é uma lib em JS que implementa o redux em
apenas 2kb. Ele conta com uma ótima documentação, onde é descrito em detalhe
cada feature do redux. Se você pretende se aprofundar, a documentação é um bom
lugar para começar.&lt;/p&gt;

&lt;p&gt;No próximo post vou abordar uma forma de trabalhar com actions assíncronas, para
fazer requisições para APIs.&lt;/p&gt;

&lt;p&gt;A princípio, redux pode parecer complicado por ser diferente dos padrões de
arquitetura que estamos acostumados, mas assim que você aprende, o céu é o
limite.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Gostou do post? Dê um &lt;strong&gt;like(&lt;/strong&gt;❤&lt;strong&gt;)&lt;/strong&gt; abaixo para ajudar na divulgação e para
que mais pessoas tenham acesso :)&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Did you enjoy the post and think it’s useful? Share this article, to help
us spread the word :)&lt;/p&gt;
</description>
        <pubDate>Wed, 22 Jun 2016 17:00:00 -0300</pubDate>
        <link>http://www.viniciusdacal.com/pt/profession/2016/06/22/conhecendo-o-basico-do-redux.html</link>
        <guid isPermaLink="true">http://www.viniciusdacal.com/pt/profession/2016/06/22/conhecendo-o-basico-do-redux.html</guid>
        
        
        <category>pt</category>
        
        <category>profession</category>
        
      </item>
    
      <item>
        <title>Learning the Basics About Redux</title>
        <description>&lt;p&gt;Redux is a predictable state container for JavaScript Applications, but what
does that mean?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://d262ilb51hltx0.cloudfront.net/max/600/1*deNSjC7XD-DA3w4wNK7XEQ.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Created by &lt;a href=&quot;https://medium.com/u/a3a8af6addc1&quot;&gt;Dan Abramov&lt;/a&gt;, Redux is an
application architecture pattern based on
&lt;a href=&quot;http://facebook.github.io/flux/&quot;&gt;Flux&lt;/a&gt; ideas and simplified with concepts from
&lt;a href=&quot;https://github.com/evancz/elm-architecture-tutorial/&quot;&gt;Elm&lt;/a&gt;. Redux gives you the
power to build consistent applications and to control the way your data flows
and is transformed, following three principles:&lt;/p&gt;

&lt;h3 id=&quot;single-source-of-truth&quot;&gt;1. Single Source of Truth&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Single_source_of_truth&quot;&gt;(SSOT)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The entire state of your application is stored in an object tree within a
single** **&lt;a href=&quot;http://redux.js.org/docs/Glossary.html#store&quot;&gt;store&lt;/a&gt;. Any access to
the state is done by referencing the original data, in the store. This way, when
information is updated it gets propagated throughout the application, thus
preventing duplicate data.&lt;/p&gt;

&lt;h3 id=&quot;state-is-read-only&quot;&gt;2. State is Read-only&lt;/h3&gt;

&lt;p&gt;The only way to change the state of your application is by emitting an
&lt;strong&gt;action&lt;/strong&gt;, an object that describes what happened.&lt;/p&gt;

&lt;p&gt;To access the state you can use the method &lt;strong&gt;getState&lt;/strong&gt; from the store. It
returns the whole application state, but as read-only.&lt;/p&gt;

&lt;p&gt;To listen to changes on the state we use the store’s method &lt;strong&gt;subscribe&lt;/strong&gt;, and
pass a listener as a parameter in the following way:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;unsubscribe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//execute every time the state change&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;unsubscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//canceling listener&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;As we can see in the above example, when we want to cancel the listener we just
call the value returned from the method subscribe, as a function.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When we need to modify the &lt;strong&gt;state&lt;/strong&gt;, the change needs to be requested by an
&lt;strong&gt;action&lt;/strong&gt;, an object containing a &lt;strong&gt;type **(required) and a **payload
**(optional). The **type&lt;/strong&gt; is an identifier for the action and the &lt;strong&gt;payload&lt;/strong&gt;
is the content to be sent with the &lt;strong&gt;action&lt;/strong&gt;, as seen in the following example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ADD_CONTACT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Jon Snow'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'youknownothing@jonsnow.com'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In the example above, the &lt;strong&gt;action&lt;/strong&gt; has type ADD_CONTACT and the necessary data
to include this contact in the &lt;strong&gt;state.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It’s common to create actions using &lt;strong&gt;action creators&lt;/strong&gt;, which are functions
that expect specific parameters and return a formatted object, as in the
following example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addContact&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ADD_CONTACT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To dispatch an &lt;strong&gt;action&lt;/strong&gt;, we use the method &lt;strong&gt;dispatch&lt;/strong&gt; from the store:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addContact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Jon Snow'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'youknownothing@jonsnow.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;changes-are-made-with-pure-functions&quot;&gt;3. Changes are made with Pure functions&lt;/h3&gt;

&lt;p&gt;To describe the way the state will be changed by the actions, we write pure
&lt;a href=&quot;http://redux.js.org/docs/Glossary.html#reducer&quot;&gt;reducers&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reducers&lt;/strong&gt; are functions that are called every time an action is dispatched.
They receive the current state and the &lt;strong&gt;action&lt;/strong&gt; as parameters, and return the
new &lt;strong&gt;state.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It’s important to highlight that a &lt;strong&gt;reducer&lt;/strong&gt; must be a &lt;a href=&quot;https://en.wikipedia.org/wiki/Pure_function&quot;&gt;pure
function&lt;/a&gt;. Given the same
parameters, a reducer should always return the same result, and to do that, it
has to be based on its own scope.&lt;/p&gt;

&lt;p&gt;To learn and understand more about pure functions, I suggest you read the post
&lt;a href=&quot;https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976#.q8sxpapvy&quot;&gt;What is a pure
function&lt;/a&gt;
from &lt;a href=&quot;https://medium.com/u/c359511de780&quot;&gt;Eric Elliott&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Considering our reducers must be pure functions, we are going to implement our
logic to include a new contact in the &lt;strong&gt;state&lt;/strong&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reducer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ADD_CONTACT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;contactCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;contactCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As we can see in the above example, our reducer checks if the action is of type
ADD_CONTACT. If it is, it returns a new state, including the new contact.&lt;/p&gt;

&lt;p&gt;To get the most out of &lt;strong&gt;Redux, **you must understand the concept of
immutability. In the above example, we don’t use the **push **method&lt;/strong&gt; &lt;strong&gt;to
include the new contact in the **contactCollection&lt;/strong&gt;, instead, we return a new
contactCollection. This one has the same contacts as the previous collection,
but contains the new contact. This way we preserve the previous state and stay
in the premise of &lt;strong&gt;read-only state.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;By following these three principles, you can write a predictable application
very easily.&lt;/p&gt;

&lt;p&gt;In this post, we only scratched the surface of Redux. In the next posts, I
intend to go deeper in each concept.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://redux.js.org/&quot;&gt;ReduxJS&lt;/a&gt; is a Javascript lib that implements Redux in
only 2kb. It has great documentation, where you can find information about each
Redux feature. If you intend to go deeper, the documentation is a good place to
start.&lt;/p&gt;

&lt;p&gt;At the beginning, Redux can seem a little complicated because it is different
from what we are used to. Nevertheless, as soon as you learn the basics, the sky
is the limit.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Did you enjoy the post and think it’s useful? Share this article, to help
us spread the word :)&lt;/p&gt;
</description>
        <pubDate>Wed, 22 Jun 2016 17:00:00 -0300</pubDate>
        <link>http://www.viniciusdacal.com/en/profession/2016/06/22/learning-the-basics-about-redux.html</link>
        <guid isPermaLink="true">http://www.viniciusdacal.com/en/profession/2016/06/22/learning-the-basics-about-redux.html</guid>
        
        
        <category>en</category>
        
        <category>profession</category>
        
      </item>
    
      <item>
        <title>Aprenda a dizer NÃO, você precisará disso</title>
        <description>&lt;p&gt;Uma das habilidades mais importantes e que muitas pessoas não a tem, e quando
digo muitas pessoas também me incluo entre elas. Acredito que o texto abaixo se
encaixa em qualquer área, mas como trabalho com desenvolvimento de software é
nesse contexto que o texto será desenvolvido.&lt;/p&gt;

&lt;p&gt;Em sua grande maioria, quem trabalha com computadores está acostumado com o
título “Garoto do computador”, não importa se você é técnico em informática, se
você é programador, arquiteto de software ou CTO de alguma startup, algumas
pessoas ainda recorrerão a você quando perderem a senha do Facebook.&lt;/p&gt;

&lt;p&gt;Se você trabalha com desenvolvimento de websites ou software, por ser uma área
relativamente nova e que contem uma certa complexidade, as pessoas não conseguem
imaginar todos os processos que englobam um simples “desenvolvimento de um
site”.&lt;/p&gt;

&lt;p&gt;Quando você fala que trabalha com desenvolvimento de websites, é natural as
pessoas próximas, recorrerem primeiro a ti antes de procurar outra
pessoa/empresa.&lt;/p&gt;

&lt;p&gt;Muitas vezes, você sabe que você não é a pessoa certa para o serviço, e cabe a
você dizer não a elas. Dizer não e explicar o por quê, que seja por você ter
habilidades só com programação e não com design, por você já trabalhar oito
horas por dia e esse ser o seu limite de trabalho, ou por simplesmente você não
querer trabalhar com o serviço em específico. É nessa hora que o poder do NÃO
fará falta.&lt;/p&gt;

&lt;h3 id=&quot;dizer-no--necessrio&quot;&gt;Dizer NÃO é necessário&lt;/h3&gt;

&lt;p&gt;É necessário e você pagará pela omissão do mesmo. Uma característica evidente de
pessoas que não sabem dizer não, é a sobrecarga de responsabilidades. Esses
indivíduos estão sempre sobrecarregados de tarefas e isso os afeta muito.&lt;/p&gt;

&lt;p&gt;Uma das situações que ocorrem com frequência é você lembrar de todas as coisas
que precisa fazer, de todos os compromissos que acabou assumindo, lembrar de
todos os prazos que estão atrasados, e ao invés de pegar uma única coisa e
tentar resolver, você desiste de tudo e vai assistir uma série, jogar video-game
ou fazer qualquer coisa que não esteja relacionada com nenhuma das tarefas, é
você entrando em crise e seu cérebro tentando desesperadamente te tirar dela.&lt;/p&gt;

&lt;p&gt;Com isso, seus principais objetivos nunca são concluídos, porque eles se
misturam as coisas que você não soube dizer não.&lt;/p&gt;

&lt;h3 id=&quot;dizer-no--sua-obrigao&quot;&gt;Dizer não é sua Obrigação&lt;/h3&gt;

&lt;p&gt;Sim, é sua obrigação, é ser honesto, porque o que mais acontece nessas situações
é você atrasar a entrega, demorar em dar respostas ou até mesmo não entregar.&lt;/p&gt;

&lt;h3 id=&quot;reserve-os-seus-sims&quot;&gt;Reserve os seus SIM’s&lt;/h3&gt;

&lt;p&gt;você conhece seus limites e sabe o máximo de tarefas que pode fazer durante a
semana, estabeleça seus objetivos e reserve tempo necessário a eles, você não
conseguirá abraçar o mundo, então escolha com cautela a quem e ao que você dará
o seu SIM.&lt;/p&gt;

&lt;p&gt;Completar pequenos objetivos te trará mais satisfação do que você estabelecer
inúmeros objetivos e deixar todos pela metade, ou não tão bem feitos como você
imaginava.&lt;/p&gt;

&lt;h3 id=&quot;no-tenha-medo-de-dizer-no&quot;&gt;Não tenha medo de dizer NÃO&lt;/h3&gt;

&lt;p&gt;Explicando a situação a pessoa provavelmente irá entender. O mais importante é
ser sincero, principalmente com você mesmo.&lt;/p&gt;

&lt;p&gt;Com o tempo você pega o jeito.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://d262ilb51hltx0.cloudfront.net/max/800/1*_K6fJiY1rznIUhcyvywPig.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Gostou do post e achou útil? Ajude na divulgação para que mais pessoas tenham acesso :)&lt;/p&gt;

&lt;p&gt;Tem alguma dica sobre o tema? deixe nos comentários abaixo :)&lt;/p&gt;

</description>
        <pubDate>Sat, 02 Apr 2016 17:00:00 -0300</pubDate>
        <link>http://www.viniciusdacal.com/pt/profissao/2016/04/02/aprenda-a-dizer-nao-voce-precisara-disso.html</link>
        <guid isPermaLink="true">http://www.viniciusdacal.com/pt/profissao/2016/04/02/aprenda-a-dizer-nao-voce-precisara-disso.html</guid>
        
        
        <category>pt</category>
        
        <category>profissao</category>
        
      </item>
    
      <item>
        <title>Se eu soubesse aos 18 - Profissão.</title>
        <description>
&lt;p&gt;Há 9 meses atrás escrevi um &lt;a href=&quot;https://medium.com/@viniciusdacal/se-eu-soubesse-aos-18-faculdade-9ee973342620#.wtxv5x2e4&quot;&gt;post semelhante falando sobre a faculdade, &lt;/a&gt;nele eu prometi escrever um post abordando o tema profissão, e aqui estou, cumprindo com a promessa; Antes tarde do que nunca.&lt;/p&gt;

&lt;p&gt;A intensão desse post não é falar nenhuma verdade absoluta ou mostrar um caminho definitivo para o sucesso profissional, e sim, apenas relatar um pouco da experiência que tive nesses quatro anos trabalhando com web, e contribuir com algumas dicas que acredito que teriam sido úteis la no início.&lt;/p&gt;

&lt;h3 id=&quot;o-incio&quot;&gt;O início&lt;/h3&gt;

&lt;p&gt;Em Umuarama-PR, em meados de 2011, cursando o segundo semestre da faculdade, decidi sair do emprego que eu estava para me aventurar a desenvolver websites. Na época, com um conhecimento básico de HTML e CSS, achei que daria conta de vender, desenhar e desenvolver sites, eu só não sabia o péssimo vendedor que eu era.&lt;/p&gt;

&lt;p&gt;Resumindo: um mês depois eu estava desesperado atrás de emprego, eu precisava de dinheiro para pagar a faculdade e minhas economias, bem, eu nunca tive economias.&lt;/p&gt;

&lt;p&gt;Nessa fase, eu decidi que já que eu não poderia trabalhar por conta própria, eu iria ao menos procurar uma vaga na minha área de estudo, então preparei meu currículo e levei nas empresas que eu conhecia na cidade.&lt;/p&gt;

&lt;p&gt;Após um mês de procura, obtive uma resposta da &lt;a href=&quot;http://adnmultipla.com&quot;&gt;ADN Múltipla&lt;/a&gt;uma agência de publicidade, propaganda e tecnologia.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Eu obtive muitos NÃOs antes de obter um SIM, não desanimem.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ainda hoje, lembro do meu primeiro dia de trabalho (01/09/2011), eu estava super empolgado para saber como era um “Ambiente de desenvolvimento”&lt;/p&gt;

&lt;p&gt;A primeira semana não foi fácil, tinha muita coisa nova pra assimilar, e ao mesmo tempo, tinha que saber administrar meu tempo entre faculdade e emprego.&lt;/p&gt;

&lt;p&gt;Aos poucos comecei a evoluir no meu trabalho e logo comecei a ver os benefícios de cursar uma faculdade e ao mesmo tempo trabalhar na área. Minha experiência do dia a dia começou a facilitar minha vida dentro da sala de aula, todas aquelas teorias faziam muito mais sentido quando unidas a prática. Ao mesmo tempo, muitas teorias e conceitos aprendidos na faculdade, acabavam me auxiliando no trabalho.&lt;/p&gt;

&lt;p&gt;A cada dia eu aprendia mais e mais. Nessa fase eu me sentia o máximo e me achava o super experiente quando o assunto era desenvolvimento web.&lt;/p&gt;

&lt;h3 id=&quot;primeiro-evento&quot;&gt;Primeiro Evento&lt;/h3&gt;

&lt;p&gt;Em novembro de 2011 fiquei sabendo através da faculdade, que teria um evento sobre web dev no Paraná, o &lt;a href=&quot;https://twitter.com/hashtag/frontinlondrina&quot;&gt;Frontin Londrina.&lt;/a&gt;Como eu já conhecia a cidade e tenho familiares lá, decidi ir no evento.&lt;/p&gt;

&lt;p&gt;10 de dezembro de 2011, primeiro dia de evento. Auditório lotado, e eu impressionado de ver aquele tanto de gente interessados em web.&lt;/p&gt;

&lt;p&gt;Logo na primeira palestra, com o tema “A nova semântica do HTML5”, eu já comecei a ficar perdido, em meio a tantos termos que eu nunca tinha ouvido falar na vida, foi ai que eu tive aquele MOMENTO! Aquele que você se da conta que você não sabe NADA.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*Rxzl4-Lnch76TmIdtPqehw.gif&quot; width=&quot;500&quot; height=&quot;200&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Isso mesmo, NADA, se você ainda não teve esse momento, você ainda terá!&lt;/p&gt;

&lt;p&gt;Esse é um dos melhores, mais necessários e esclarecedores momentos da sua vida. É a hora que você se da conta que a única coisa que você sabe, é que você NADA sabe, e que não importa o quanto você estude, sempre haverá algo a ser estudado ou descoberto.&lt;/p&gt;

&lt;p&gt;Lembra que eu falei que eu me achava o “super experiente”? Aquela visão que eu tinha, caiu por terra nesta hora.&lt;/p&gt;

&lt;p&gt;BTW, O evento foi incrível, tive a oportunidade de conhecer alguns nomes do mundo frontendiano e voltei pra casa com uma infinidade de conteúdo para estudar.&lt;/p&gt;

&lt;p&gt;O Frontin Londrina foi crucial para minha carreira, abriu meus olhos para este mundo de comunidade, boas práticas, padrões, Javascript, HTML5, CSS3 e etc.&lt;/p&gt;

&lt;p&gt;Gostaria de falar que cheguei em casa no outro dia e criei uma framework que abalou o mundo web. Porém, mesmo com todo esse ânimo e decidido que iria estudar e me especializar nessa área, minha evolução foi à baby steps.&lt;/p&gt;

&lt;p&gt;Comecei a aprender Javascript, passei pela fase de ser o programador jQuery, de pesquisar por “jQuery Carousel plugin” no Google e me sentir o máximo por conseguir implementar um deles em um site, e continuei assim por um bom tempo.f&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*0G-uU5pAdgSAwlEk44BBzg.jpeg&quot; width=&quot;400&quot; height=&quot;304&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nunca parei de procurar conteúdo novo para estudar, mas aos poucos vi que todas as coisas novas que eu estava aprendendo, não se aplicavam ao meu local de trabalho, pelo próprio ritmo de agência.&lt;/p&gt;

&lt;p&gt;Logo que terminei a faculdade, julho de 2013, decidi procurar uma vaga pra fora da cidade, onde eu tivesse a oportunidade de desenvolver ainda mais minhas skills.&lt;/p&gt;

&lt;p&gt;Encontrei uma vaga em Curitiba, especificamente para Frontend developer, o que em 2013 era um pouco raro se comparado a hoje, e pra trabalhar principalmente com canvas. Pedi demissão, me organizei para mudar e ao mesmo tempo estava me preparando para ir para o meu primeiro BrazilJS.&lt;/p&gt;

&lt;p&gt;Indo de ônibus de &lt;a href=&quot;https://www.google.com.br/maps/dir/Umuarama,+PR/Cascavel+-+PR/Porto+Alegre,+RS/@-26.8292161,-56.9521053,6z/data=!3m1!4b1!4m20!4m19!1m5!1m1!1s0x94f2d6aad88f12b7:0x62e741a44bc7bfc7!2m2!1d-53.3206105!2d-23.7661064!1m5!1m1!1s0x94f17f64f7507c29:0xfa1220399425243c!2m2!1d-53.459544!2d-24.9578832!1m5!1m1!1s0x9519784e88e1007d:0xc7011777424f60bd!2m2!1d-51.2176584!2d-30.0346564!3e0?hl=pt-BR&quot;&gt;Umuarama-PR para Porto Alegre-RS&lt;/a&gt; recebo um e-mail da empresa de Curitiba, me avisando que a contratação havia sido cancelada e que novas contratações só seriam efetuadas no próximo ano. Fiquei um pouco desnorteado, mas ainda estava na animação para o BrazilJS.&lt;/p&gt;

&lt;h3 id=&quot;braziljs-2013&quot;&gt;BrazilJS 2013&lt;/h3&gt;

&lt;p&gt;Sem palavras para descrever o que foi participar &lt;a href=&quot;https://www.youtube.com/watch?v=93Awzbla0yc&amp;amp;list=PLg2lQYZDBwOSyKzM1_nH-jrBGnwjG6JDt&quot;&gt;desse evento&lt;/a&gt;, mais um marco histórico para mim. Aprender que Javascript ia MUITO ALÉM do que eu conseguia imaginar e que sim, havia vida pós jQuery.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*AGQZhIFbfxYpzJA-rYiQmg.jpeg&quot; width=&quot;300&quot; height=&quot;300&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Após o evento, acabei indo para Curitiba, já que eu tinha combinado de ficar no meu tio por um tempo e eu estava sem emprego anyway.&lt;/p&gt;

&lt;p&gt;A história se repete, novamente começo a procurar vagas, enviar currículos e esperar respostas. O tempo foi passando, o desespero do desemprego aumentando e eu mandando currículos a torto e a direito.&lt;/p&gt;

&lt;p&gt;Dessa vez, infelizmente, o destino foi desfavorável, não obtive respostas e acabei voltando para Umuarama, com aquele sentimento de incapacidade e derrota.&lt;/p&gt;

&lt;p&gt;Um tempo depois recebi três propostas, uma para trabalhar com JAVA outra com PHP(Magento) e outra como “Fullstack” (com foco em Frontend), na mesma agência que eu trabalhava antes.&lt;/p&gt;

&lt;p&gt;Mesmo as propostas salariais de Java e Magento sendo melhores, eu optei pela experiência de continuar trabalhando com Frontend, e no fim acabei voltando para meu antigo emprego.&lt;/p&gt;

&lt;p&gt;O tempo passou mais uma vez e muito do que eu estudava eu ainda não conseguia aplicar no trabalho. Nesse meio tempo, aproveitei para evoluir minhas skills de web designer, que mesmo ainda não sendo meu forte me ajudam quando preciso.&lt;/p&gt;

&lt;h3 id=&quot;braziljs-2014&quot;&gt;BrazilJS 2014&lt;/h3&gt;

&lt;p&gt;Consegui participar novamente no ano de 2014 e mais uma vez foi um &lt;a href=&quot;https://www.youtube.com/watch?v=AgZJQT1-ixg&amp;amp;list=PLg2lQYZDBwORBD0dC7hCtwpVkIuMx573N&quot;&gt;evento incrível&lt;/a&gt;e inesquecível e me lembrou de como eu tinha vontade de me aprofundar no mundo do desenvolvimento web e me especializar cada dia mais.&lt;/p&gt;

&lt;p&gt;Deixei as coisas seguirem seu fluxo natural, continuei trabalhando, estudando e aos poucos foram surgindo algumas oportunidades.&lt;/p&gt;

&lt;p&gt;Em uma palestra que fui assistir na &lt;a href=&quot;http://www.alfaumuarama.com.br/faculdade/&quot;&gt;Faculdade Alfa&lt;/a&gt;, acabei sendo apresentado, pelo professor e amigo Anderson Fernandes, ao Elton Minetto.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Nunca esqueçam, networking, networking, networking!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Alguns meses depois, apliquei para uma vaga de Frontend Developer na &lt;a href=&quot;http://www.coderockr.com&quot;&gt;Coderockr&lt;/a&gt;, passei pelo processo seletivo e acabei sendo chamado para trabalhar.&lt;/p&gt;

&lt;p&gt;Em 10 meses de trabalho, nunca faltou oportunidade para aplicar todo o conhecimento adquirido durante esses anos, e todos os dias eu vou para casa já pensando no que vou estudar para trazer no dia seguinte pro trabalho.&lt;/p&gt;

&lt;p&gt;Mas, aqueles três anos de experiência dentro de uma agência, foram fundamentais!&lt;/p&gt;

&lt;h3 id=&quot;brazil-js-2015&quot;&gt;Brazil JS 2015&lt;/h3&gt;

&lt;p&gt;Comemorando 20 anos do Javascript, acho que nem tem muito o que falar né? &lt;a href=&quot;https://www.youtube.com/watch?v=p1EdfnnPn28&amp;amp;list=PLg2lQYZDBwORUpJTu5MxI71iEQIyc_Lno&amp;amp;index=2&quot;&gt;Best event ever!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*0KU2cyOgiPLRRcKZtS4RMA.jpeg&quot; width=&quot;960&quot; height=&quot;640&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Em termos de carreira, sou um completo iniciante, a minha está ainda em seu início. Porém, se eu pudesse enviar uma carta a mim mesmo quando estava com 18 anos, as seguintes dicas estariam nela:&lt;/p&gt;

&lt;h4 id=&quot;comparea-ao-maior-nmeros-de-eventos-que-puder&quot;&gt;1 — Compareça ao maior números de eventos que puder.&lt;/h4&gt;

&lt;p&gt;Recentemente fui no Frontin Floripa junto com o &lt;a href=&quot;http://jeancarlomachado.com.br/#!/post/137&quot;&gt;Jean Carlo Machado&lt;/a&gt;, e acabou surgindo o assunto sobre como eventos assim trazem um Feeling bom para ns desenvolvedores. Essa proximidade com a comunidade faz muita diferença, agrega muito conhecimento e sem dúvidas você volta para casa com outro ânimo.&lt;/p&gt;

&lt;h4 id=&quot;compartilhe-conhecimento&quot;&gt;2 - Compartilhe conhecimento.&lt;/h4&gt;

&lt;p&gt;Compartilhe conhecimento, o máximo que puder, quanto mais você compartilha, mais você cresce. Por trás de um post de 5 parágrafos, vão-se muitas horas de leitura. É uma Win win situation, você ganha porque aprende muito no processo de reunir conteúdo e escrever sobre o assunto e a comunidade ganha com o conteúdo produzido.&lt;/p&gt;

&lt;h4 id=&quot;contribua-com-projetos-open-source&quot;&gt;3 - Contribua com projetos open source.&lt;/h4&gt;

&lt;p&gt;Quando você escreve algo sabendo que outros irão ler, com certeza você fará com mais esmero. O Github é o portfólio do programador, é fácil para um contratante entrar no seu perfil do Github e ver a forma como você coda, quais projetos você segue e quais são seus principais interesses.&lt;/p&gt;

&lt;p&gt;Projetos open source são capazes de te fornecer bagagem necessária para entrar em qualquer empresa.&lt;/p&gt;

&lt;p&gt;Comece do básico, abrindo issues, contribuindo com documentações, fazendo review em PRs e assim por diante.&lt;/p&gt;

&lt;p&gt;De quebra, você ganha expertise em GIT.&lt;/p&gt;

&lt;h4 id=&quot;aprenda-ingls&quot;&gt;4 - Aprenda inglês&lt;/h4&gt;

&lt;p&gt;Quanto mais cedo, melhor!&lt;/p&gt;

&lt;p&gt;Nesse &lt;a href=&quot;http://www.viniciusdacal.com/pt/ingles/2015/01/22/ingles-sim-voce-precisa-aprender.html&quot;&gt;post&lt;/a&gt; eu abordo um pouco mais o tema, mas sim, quanto antes você aprender, melhor.&lt;/p&gt;

&lt;p&gt;Se você não gosta, aprenda a gostar, não lute contra, inglês é inevitável.&lt;/p&gt;

&lt;h4 id=&quot;seja-um-eterno-junior&quot;&gt;5 - Seja um eterno Junior.&lt;/h4&gt;

&lt;p&gt;Em termos de APRENDER, seja um eterno Jr. Sempre esteja disposto a aprender aquela nova framework, aquele novo conceito ou até mesmo aquela nova linguagem.&lt;/p&gt;

&lt;p&gt;Sempre considere a possibilidade de você estar errado, isso no mínimo evita muitas horas de debug.&lt;/p&gt;

&lt;p&gt;Acolha as novas ideias e analise-as ao invés de simplesmente descartá-las.&lt;/p&gt;

&lt;p&gt;Mantenha sempre essa vontade de aprender.&lt;/p&gt;

&lt;p&gt;Seja humilde, quanto antes você conseguir enxergar o quão pouco você sabe, mais fácil será o processo de evolução.&lt;/p&gt;

&lt;p&gt;Tem alguma dica sobre carreira? deixe nos comentários abaixo :)&lt;/p&gt;

</description>
        <pubDate>Fri, 18 Dec 2015 18:00:00 -0200</pubDate>
        <link>http://www.viniciusdacal.com/pt/profissao/2015/12/18/se-eu-soubesse-aos-18-profissao.html</link>
        <guid isPermaLink="true">http://www.viniciusdacal.com/pt/profissao/2015/12/18/se-eu-soubesse-aos-18-profissao.html</guid>
        
        
        <category>pt</category>
        
        <category>profissao</category>
        
      </item>
    
      <item>
        <title>Curso introdução ao Javascript - Faculdade Alfa</title>
        <description>&lt;p&gt;No último sábado ministrei a primeira parte do minicurso de Javascript na Faculdade Alfa Umuarama. Estou disponibilizando aqui os slides e links para os exemplos criados no curso.&lt;/p&gt;

&lt;p&gt;Os slides utilizados foram esses:&lt;/p&gt;

&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/46876327&quot; width=&quot;100%&quot; height=&quot;355&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;

&lt;h2 id=&quot;exemplos-criados&quot;&gt;Exemplos criados&lt;/h2&gt;
&lt;p&gt;É possível acessar os arquivos direto no &lt;a href=&quot;https://github.com/viniciusdacal/mini-curso-javascript-alfa&quot;&gt;repositório do github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.viniciusdacal.com/mini-curso-javascript-alfa/ball/&quot;&gt;Confira um dos exemplos criados no curso utilizando Canvas&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;contatos&quot;&gt;Contatos&lt;/h3&gt;
&lt;p&gt;Dúvidas, comen†ários ou sugestões, envie um e-mail para &lt;a href=&quot;mailto:viniciusldacal@gmail.com&quot;&gt;viniciusldacal@gmail.com&lt;/a&gt;, ou no Twitter &lt;a href=&quot;https://twitter.com/vinicius_dacal&quot;&gt;@vinicius_dacal&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 13 Apr 2015 17:00:00 -0300</pubDate>
        <link>http://www.viniciusdacal.com/pt/javascript/talk/2015/04/13/talk-introducao-ao-javascript.html</link>
        <guid isPermaLink="true">http://www.viniciusdacal.com/pt/javascript/talk/2015/04/13/talk-introducao-ao-javascript.html</guid>
        
        
        <category>pt</category>
        
        <category>javascript</category>
        
        <category>talk</category>
        
      </item>
    
      <item>
        <title>Se eu soubesse aos 18 - Faculdade.</title>
        <description>
&lt;p&gt;O que você deveria saber antes de entrar na faculdade e também durante o curso? Neste post darei dicas que acho relevantes, informações que gostaria de ter antes de ter entrado na faculdade.&lt;/p&gt;

&lt;p&gt;Recentemente ministrei uma palestra com o tema “A profissão além do diploma, mitos e verdades sobre o sucesso profissional”, a partir dela decidi escrever dois posts aqui pro blog, um abordando somente sobre a faculdade e outro sobre profissão, e como está no próprio título, esse aqui é sobre a faculdade.&lt;/p&gt;

&lt;h3 id=&quot;introduo&quot;&gt;Introdução&lt;/h3&gt;
&lt;p&gt;Quando você está planejando entrar em uma faculdade você tem uma imagem bem distorcida dela. Eu antes de começar o curso de Sistemas para internet, achei que na faculdade eu aprenderia TUDO para ser um excelente profissional, e que somente com o conteúdo das aulas eu seria um ótimo programador.&lt;/p&gt;

&lt;p&gt;Ao entrar na faculdade, comecei a sofrer logo no primeiro bimestre, nas primeiras semanas de aulas já veio aquela enxurrada de trabalhos, e como eu não era nada acostumado a fazê-los, eu acabei ficando com nota vermelha em uma das matérias.&lt;/p&gt;

&lt;p&gt;Aos poucos você percebe que um curso ou uma faculdade são tão bons quanto ao tamanho da sua dedicação. Faculdade é apenas informação, cabe a você absorver essa informação e convertê-la em conhecimento.&lt;/p&gt;

&lt;h3 id=&quot;dicas&quot;&gt;Dicas&lt;/h3&gt;

&lt;h4 id=&quot;leia-seus-e-mails-frequentemente&quot;&gt;Leia seus E-mails frequentemente&lt;/h4&gt;
&lt;p&gt;Talvez isso seja obvio para a maioria das pessoas, mas para mim não era.
Eu tinha um e-mail profissional, o qual eu acompanhava todos os dias, mas como eu quase não movimentava o e-mail pessoal, eu lia ele no máximo uma vez por semana. Isso me prejudicou um pouco no início e logo peguei o costume de conferir no mínimo duas vezes ao dia. Naquela época eu não tinha smartphone, hoje está muito mais fácil.&lt;/p&gt;

&lt;h4 id=&quot;se-aprofunde-nos-seus-interesses&quot;&gt;Se aprofunde nos seus interesses&lt;/h4&gt;
&lt;p&gt;Assistiu uma aula e se interessou pelo assunto? Chegue em casa e estude mais sobre! As vezes você pode ter acabado de encontrar um seguimento interessante para trabalhar e não sabe. Na próxima aula, leve suas dúvidas sobre esse estudo para o professor. Sempre que estudamos e temos pouca base, surgem muitas dúvidas e esse é um dos papeis do professor, tirar suas dúvidas!&lt;/p&gt;

&lt;h4 id=&quot;tenha-um-bom-relacionamento-com-os-professores&quot;&gt;Tenha um bom relacionamento com os professores&lt;/h4&gt;
&lt;p&gt;Troque uma ideia com o professor antes ou depois da aula, tire suas dúvidas, dê sugestões, tente absorver o máximo de informação que puder. Demonstre interesse no assunto.&lt;/p&gt;

&lt;p&gt;O bom relacionamento com o professor é uma via de mão dupla, o professor pode lhe ajudar a achar uma vaga de emprego que se identifique com você. Olhando pelo lado do professor, nada melhor do que ver um aluno exercendo a profissão que você ensinou à ele.&lt;/p&gt;

&lt;h4 id=&quot;faa-amizades&quot;&gt;Faça amizades&lt;/h4&gt;
&lt;p&gt;Conheça pessoas que tenham o mesmo interesse que você e se reunam para trocar uma ideia. Essa troca de experiência não tem dinheiro que pague.&lt;/p&gt;

&lt;h4 id=&quot;faa-networking&quot;&gt;Faça networking&lt;/h4&gt;
&lt;p&gt;Quer lugar melhor que a faculdade para conhecer gente que atua na sua área. Que você pode vir a precisar da ajuda um dia, as vezes com prestações de serviços ou até quem sabe, indicação para alguma vaga.&lt;/p&gt;

&lt;h4 id=&quot;aproveite-o-hoje&quot;&gt;Aproveite o hoje!&lt;/h4&gt;
&lt;p&gt;Muitas vezes eu me preocupava mais com o que eu poderia fazer depois da graduação do que com o que eu poderia fazer para aproveitar mais o curso.&lt;/p&gt;

&lt;p&gt;Chega de ficar fazendo planos somente para quando concluir o curso. Faça planos que você possa cumprir durante a faculdade. Esse tempo vai acabar e não voltará mais!&lt;/p&gt;

&lt;h3 id=&quot;concluso&quot;&gt;Conclusão&lt;/h3&gt;
&lt;p&gt;A faculdade vai lhe mostrasr apenas caminhos a serem seguidos, você precisará escolher um deles e seguir por conta própria. Ninguém vai lhe ensinar a ser o melhor em algo, isso deve vir de você!&lt;/p&gt;

&lt;p&gt;Tem alguma dica sobre faculdade? Contribua com um comentário!&lt;/p&gt;

&lt;p&gt;Dúvidas, comentários ou sugestões, deixe logo abaixo. :)&lt;/p&gt;

</description>
        <pubDate>Fri, 27 Mar 2015 17:00:00 -0300</pubDate>
        <link>http://www.viniciusdacal.com/pt/faculdade/2015/03/27/se-eu-soubesse-aos-18-faculdade.html</link>
        <guid isPermaLink="true">http://www.viniciusdacal.com/pt/faculdade/2015/03/27/se-eu-soubesse-aos-18-faculdade.html</guid>
        
        
        <category>pt</category>
        
        <category>faculdade</category>
        
      </item>
    
      <item>
        <title>Install plugins on Sublime Text!</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt; is a free text editor that gives you freedom to code in many programming languages. Above that, It is a very lightweight program and it is also possible install some plugins, that is particularly the best part.&lt;/p&gt;

&lt;p&gt;###Package Control&lt;/p&gt;

&lt;p&gt;As the name says, Package Control is your Package Controller, with it, you can search, install and remove snippets, plugins, etc…&lt;/p&gt;

&lt;p&gt;Package Control doesn’t come with sublime installer, but it’s very simple to install it:&lt;/p&gt;

&lt;p&gt;Go to menu program and select &lt;code class=&quot;highlighter-rouge&quot;&gt;View &amp;gt; Show Console&lt;/code&gt;, in the console that will appears, paste the text below:&lt;/p&gt;

&lt;p&gt;If you are in Sublime Text 2:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;import urllib2,os,hashlib; h = '2deb499853c4371624f5a07e27c334aa' + 'bf8c4e67d14fb0525ba4f89698a6d7e1'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), 'wb' ).write(by) if dh == h else None; print('Error validating download (got %s instead of %s), please try manual install' % (dh, h) if dh != h else 'Please restart Sublime Text to finish installation')&quot;&lt;/span&gt; | escape&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you are in Sublime Text 3:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;import urllib.request,os,hashlib; h = '2deb499853c4371624f5a07e27c334aa' + 'bf8c4e67d14fb0525ba4f89698a6d7e1'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)&quot;&lt;/span&gt; | escape&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;When It done, press &lt;code class=&quot;highlighter-rouge&quot;&gt;Enter&lt;/code&gt; and wait the installation finish.&lt;/p&gt;

&lt;p&gt;Restart Sublime Text and press &lt;code class=&quot;highlighter-rouge&quot;&gt;Cmd+Shift+P&lt;/code&gt;. In the input that appears, type “Install Package” and press &lt;code class=&quot;highlighter-rouge&quot;&gt;Enter&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Search for the plugin name that you want to install, select it, press &lt;code class=&quot;highlighter-rouge&quot;&gt;Enter&lt;/code&gt; again and wait for the installation.&lt;/p&gt;

&lt;p&gt;###Conclusion&lt;/p&gt;

&lt;p&gt;Plugins were made to make your life easier, they are very effective if you would know to use them. Try to find the plugins that best fit in your workflow.&lt;/p&gt;

&lt;p&gt;You can easily find many lists with excellent sublime plugins just googling.&lt;/p&gt;

&lt;p&gt;Take a look at the &lt;a href=&quot;/en/frontend/html/css/2015/01/20/know-emmet-and-you-will-never-be-the-same.html&quot;&gt;post that I wrote about Emmet&lt;/a&gt;. If you write HTML and CSS, this should be your first plugin.&lt;/p&gt;

&lt;p&gt;And you that already knew Sublime, which plugins do you use?&lt;/p&gt;

&lt;p&gt;Questions, comments or suggestions, leave below. :)&lt;/p&gt;

</description>
        <pubDate>Thu, 26 Mar 2015 17:00:00 -0300</pubDate>
        <link>http://www.viniciusdacal.com/en/frontend/html/css/2015/03/26/install-plugins-on-sublime-text.html</link>
        <guid isPermaLink="true">http://www.viniciusdacal.com/en/frontend/html/css/2015/03/26/install-plugins-on-sublime-text.html</guid>
        
        
        <category>en</category>
        
        <category>frontend</category>
        
        <category>html</category>
        
        <category>css</category>
        
      </item>
    
  </channel>
</rss>
